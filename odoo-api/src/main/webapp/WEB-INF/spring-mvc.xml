<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- enable autoscan -->
    <context:component-scan base-package="com.b2s.scrumlr"/>
    <context:property-placeholder location="classpath:redis.properties" />
    <!-- enable autowire -->
    <context:annotation-config/>

    <mvc:resources mapping="/**/*.js" location="/" />
    <mvc:resources mapping="/**/*.png" location="/" />
    <mvc:resources mapping="/**/*.jpg" location="/" />
    <mvc:resources mapping="/**/*.jpeg" location="/" />
    <mvc:resources mapping="/**/*.gif" location="/" />
    <mvc:resources mapping="/**/*.tif" location="/" />
    <mvc:resources mapping="/**/*.tiff" location="/" />
    <mvc:resources mapping="/**/*.css" location="/" />
    <mvc:resources mapping="/**/*.json" location="/" />


    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/timesheet/**" />
            <bean class="com.b2s.scrumlr.common.inteceptor.TokenInteceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/admin/**" />
            <bean class="com.b2s.scrumlr.common.inteceptor.CORSFilter"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="requestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
        <property name="connectTimeout" value="50000"/>
        <property name="readTimeout" value="50000" />
    </bean>
    <bean id="restClient" class="org.springframework.web.client.RestTemplate">
        <constructor-arg name="requestFactory" ref="requestFactory"/>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8"/>
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="minIdle" value="${redis.minIdle}" />
        <property name="jmxNamePrefix" value="${redis.prefix}"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="poolConfig" ref="redisPoolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
        <property name="keySerializer">
            <bean
                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean
                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean
                    class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean
                    class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>
</beans>
